---
title: '02 Independent Variable and Controls'
author:
  - name: J Andrés Gannon
    email: "andres.gannon@gmail.com"
    url: jandresgannon.com
    affiliation: Council on Foreign Relations
format:
  pdf:
    fig-format: png
    thanks: test text here
editor: visual
execute:
  echo: false
  warning: false
  cache: true
date: "`r format(Sys.Date(), '%B %d, %Y')`"
header-includes:
- \usepackage{tikz}
- \usepackage{pgfplots}
- \pgfplotsset{compat=newest}
- \usetikzlibrary{plotmarks}
- \usetikzlibrary{arrows.meta}
- \usepgfplotslibrary{patchplots}
- \usepackage{grffile}
- \usepackage{caption}
- \usepackage[utf8]{inputenc}
- \usepackage[doublespacing]{setspace}
- \AtBeginEnvironment{tabular}{\singlespacing}
- \usepackage{float}
- \usepackage{multirow}
- \usepackage{tablefootnote}
- \usepackage{pifont}
- \usepackage{newunicodechar}
- \usepackage{booktabs}
- \usepackage{tabularx}
- \newunicodechar{✓}{\ding{51}}
bibliography: ForceStructure.bib
---

# Set up

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(tidyverse)
```

This document creates country-year covariates for all states.

# Load data

```{r load-data}
# list of all countries
countries <- read.csv(paste0(here::here(), "/inst/extdata/countries_list.csv"))

# the IISS dataframe from 01a
iiss <- readRDS(paste0(here::here(), "/data/rDMC_long_v1.rds"))
```

# Create data frame

```{r create-df}
states <- read.csv(file = paste0(here::here(), '/inst/extdata/polities_mssl_gleditschward_states.csv')) %>%
  dplyr::filter(microstate == 0) %>%
  dplyr::select(gwcode, gw_start, gw_end) %>%
  dplyr::rename(country_code_cow = gwcode)

# Make long to expand year range, since we need to match on the qcode-year combo
states$gw_start <- as.POSIXct(states$gw_start)
states$gw_end <- as.POSIXct(states$gw_end)

states$gw_start <- as.numeric(format(states$gw_start, '%Y'))
states$gw_end <- as.numeric(format(states$gw_end, '%Y'))

# Make list of years in existence from 1970-2014 from GW
states <- states %>%
  dplyr::filter(gw_end >= 1970) %>%
  dplyr::mutate(start = dplyr::if_else(gw_start <= 1970, 1970, gw_start),
                end = dplyr::if_else(gw_end < 2012, gw_end, 2014)) %>%
  dplyr::select(!dplyr::starts_with("gw_")) %>%
  tidyr::nest(start, end) %>%
  dplyr::mutate(data = map(data, ~seq(unique(.$start), unique(.$end), 1))) %>%
  tidyr::unnest(data) %>%
  dplyr::rename(year = data)

df <- states

# Fix edge cases by reverting GW codes to COW codes. Keep post-1990 Germany as 255, post-1990 Yemen as 678, and post-2006 Serbia as 345
df$country_code_cow[df$country_code_cow == 260 & df$year > 1990] <- 255
df$country_code_cow[df$country_code_cow == 678 & df$year > 1990] <- 679
df$country_code_cow[df$country_code_cow == 340 & df$year >= 2006] <- 345

# country code and subset to only country-years with COW codes that are GW states
df$country <- countrycode::countrycode(df$country_code_cow, "cown", "country.name")
df <- df[!is.na(df$country_code_cow), ]
df$country_code_cow <- as.character(df$country_code_cow)

# Fix edge cases, like countries that don't have a name from the countrycodes package
df$country[df$country_code_cow == 260 &
             df$year < 1991] <- "German Federal Republic"

# country COW abbreviation
df$country_abbrev_cow <- countrycode::countrycode(df$country_code_cow, "cown", "cowc")

df$country_abbrev_cow[df$country_code_cow == 260 &
             df$year < 1991] <- "GFR"

# continent
df$continent <- countrycode::countrycode(df$country_code_cow, 'cown', 'continent')

df$continent[df$country_code_cow == 260] <- "Europe" # German Federal Republic
df$continent[df$country_code_cow == 265] <- "Europe" # German Democratic Republic
df$continent[df$country_code_cow == 315] <- "Europe" # Czech Republic
df$continent[df$country_code_cow == 345] <- "Europe" # Yugoslavia
df$continent[df$country_code_cow == 347] <- "Europe" # Kosovo
df$continent[df$country_code_cow == 678] <- "Asia" # Yemen Arab Republic 
df$continent[df$country_code_cow == 680] <- "Asia" # Yemen People's Republic

# is country in IISS?
iiss_sub <- dplyr::distinct(iiss, country) %>%
  dplyr::mutate(country = as.character(country)) %>%
  dplyr::filter(!is.na(country))
iiss_sub$cown = countrycode::countrycode(iiss_sub$country, "country.name", "cown")
iiss_sub$cown[iiss_sub$country == "multinationalorganization"] <-  000
iiss_sub$cown[iiss_sub$country == "palestinian territories"] <-  665
iiss_sub$cown[iiss_sub$country == "serbia"] <-  345
iiss_sub$cown[iiss_sub$country == "kosovo"] <-  347
iiss_cown <- iiss_sub$cown

df$in_iiss <- ifelse(df$country_code_cow %in% iiss_cown, 1, 0)

# Add decade variable
df <- df %>%
  dplyr::mutate(decade = (year - year %% 10))

geog <- df
```

# Geography covariates

## Sea

```{r sea}
# coastline lengths
coastlines <- rio::import(paste0(here::here(), "/inst/extdata/cia_world_factbook_coastlines.csv"))

# Prep and join coastlines.csv data
coastlines$country_code_cow <- countrycode::countrycode(coastlines$country, "country.name", "cowc")
coastlines$country_code_cow <- countrycode::countrycode(coastlines$country_code_cow, "cowc", "cown")
coastlines <- dplyr::select(coastlines, -country) %>%
  dplyr::filter(!is.na(country_code_cow)) %>%
  dplyr::rename(coastline_km = coastline)
coastlines$country_code_cow <- as.character(coastlines$country_code_cow)
geog_coast <- dplyr::left_join(geog, coastlines)
```

## Land

```{r land}
# land border lengths and bordering states
land_border <- rio::import(paste0(here::here(), "/inst/extdata/cia_world_factbook_landborder.csv"))

# state land area
land_area <- rio::import(paste0(here::here(), "/inst/extdata/wb_land_area.csv"))

# Prep and join landborder.csv
land_border$country_code_cow <- countrycode::countrycode(land_border$`Country Name`, "country.name", "cowc")
land_border$country_code_cow <- countrycode::countrycode(land_border$country_code_cow, "cowc", "cown")
land_border <- dplyr::select(land_border, -`Country Name`) %>%
  dplyr::filter(!is.na(country_code_cow)) %>%
  dplyr::distinct(`Length of Land Boundaries`, `Length of Land Boundaries Border Countries`, country_code_cow) %>%
  dplyr::mutate(`Length of Land Boundaries` = gsub("[^0-9]", "", `Length of Land Boundaries`)) %>%
  dplyr::rename(land_boundary_length_km = `Length of Land Boundaries`,
                bordering_states = `Length of Land Boundaries Border Countries`)
land_border$country_code_cow <- as.character(land_border$country_code_cow)
land_border$land_boundary_length_km <- as.numeric(land_border$land_boundary_length_km)
geog_land <- dplyr::left_join(geog_coast, land_border, by = "country_code_cow")

# Prep and join wb_land_area.csv
colnames(land_area) <- as.character(land_area[1,])
land_area <- land_area[-1,]
land_area <- dplyr::select(land_area, `Country Name`, `Country Code`, `2016`)
land_area$country_code_cow <- countrycode::countrycode(land_area$`Country Name`, "country.name", "cowc")
land_area$country_code_cow <- countrycode::countrycode(land_area$country_code_cow, "cowc", "cown")
land_area <- dplyr::select(land_area, -`Country Name`) %>%
  dplyr::filter(!is.na(country_code_cow)) %>%
  dplyr::rename(land_area = `2016` ) %>%
  dplyr::distinct(country_code_cow, land_area)
land_area$country_code_cow <- as.character(land_area$country_code_cow)
geog_area <- dplyr::left_join(geog_land, land_area, by = "country_code_cow")

# create mile versions
geog_covariates <- geog_area %>%
  dplyr::mutate(land_boundary_length_mi = as.numeric(land_boundary_length_km) * 0.621371,
                coastline_mi = as.numeric(coastline_km) * 0.621371,
                land_boundary_length_log = log(land_boundary_length_mi),
                coastline_log = log(coastline_mi))
```

# IPE covariates

## Graham and Tucker

Variables from Graham and Tucker IPE dataset

```{r ipe-data}
# IPE external dataset 
ipe <- rio::import(paste0(here::here(), "/inst/extdata/ipe_data_resource/3. Graham_Tucker_IPE_v5.RDATA")) %>%
  sjlabelled::remove_all_labels()

# prep IPE
ipe <- ipe %>% 
  dplyr::rename(country_code_cow = ccode)

# create subsets
mc <- ipe %>%
  dplyr::select(year, country_code_cow, contains("_MC")) %>%
  dplyr::mutate(milex_MC_log = log(milex_MC + 1))

si <- ipe %>%
  dplyr::select(year, country_code_cow, contains("_SI"))

wdi <- ipe %>%
  dplyr::select(year,
                country_code_cow,
                area_WDI,
                area_land_WDI,
                gdp_WDI,
                gdppc_WDI,
                journal_WDI,
                patapps_WDI,
                pop_WDI,
                gdp_WDI_PW,
                gdppc_WDI_PW,
                pop_WDI_PW,
                lngdp_WDI_PW,
                lngdppc_WDI_PW,
                lnpop_WDI_PW) %>%
  dplyr::mutate(lngdp_WDI = log(gdp_WDI),
                lngdppc_WDI = log(gdppc_WDI),
                lnpop_WDI = log(pop_WDI),
                gdp_WDI_full = dplyr::coalesce(gdp_WDI, gdp_WDI_PW), 
                gdppc_WDI_full = dplyr::coalesce(gdppc_WDI, gdppc_WDI_PW),
                pop_WDI_full = dplyr::coalesce(pop_WDI, pop_WDI_PW),
                lngdp_WDI_full = dplyr::coalesce(lngdp_WDI, lngdp_WDI_PW),
                lngdppc_WDI_full = dplyr::coalesce(lngdppc_WDI, lngdppc_WDI_PW),
                lnpop_WDI_full = dplyr::coalesce(lnpop_WDI, lnpop_WDI_PW))
```

## Higher education

We follow conventional models that use higher education levels to capture the degree of S&T human capital a state possesses (Early 2014). This is measured as the percent of a state's population with a higher education degree

```{r highered}
# Load data
highered <- read.csv(paste0(here::here(),"/inst/extdata/BarroLee_JDE_2013/BL2013_MF1599_v2.2.csv"))

# Add COW country code
highered$country_code_cow <- as.numeric(countrycode::countrycode(highered$WBcode, "wb", "cown"))

# Subset to variables of interest (lhc)
keep <- c('year', 'lhc', 'country_code_cow')
highered <- dplyr::select(highered, keep)

# Convert percent to decimal
highered$lhc <- as.numeric(highered$lhc)/100

# Rename variables
highered <- highered %>% 
  dplyr::rename(highered_percent = lhc) %>%
  dplyr::mutate(country_code_cow = as.character(country_code_cow))

# Merge
geog_covariates <- dplyr::left_join(geog_covariates, highered)
```

# Institutional membership

```{r instit-memb}
mem <- ipe %>%
  dplyr::select(year,
                country_code_cow,
                WTOmem_MEM,
                NATOwhen_MEM,
                NATOmem_MEM,
                EUmem_MEM,
                OECDmem_MEM) %>%
  dplyr::mutate(NATOdur_MEM = year - NATOwhen_MEM)
```

# Regime type and misc geo

```{r regime}
misc <- ipe %>%
  dplyr::select(year,
                country_code_cow,
                polity_P4,
                polity2_P4,
                military_GE,
                numislands_AP,
                archipelago_AP,
                lnislands_AP) %>%
  dplyr::mutate(polity2_P4 = polity2_P4 + 10,
                democracy = dplyr::if_else(polity2_P4 >= 7, 1, 0))

```

# Alliances

## ATOP

```{r atop}
# ATOP external dataset 
load(paste0(here::here(), "/inst/extdata/ATOP/atop_alliance.rda"))

# prep and subset ATOP
atop_sub <- atop_alliance %>%
  dplyr::filter(atop_defense == 1) %>%
  dplyr::select(ccode1,
                ccode2,
                year)

# Create new vars for alliance strength by merging mil spend and CINC then gathering. Do so using ccode1, since that is the ally who is GIVING the defense pact
strength <- ipe %>%
  dplyr::select(year, country_code_cow, cinc_MC, milex_SIPRI) %>%
  dplyr::rename(ccode1 = country_code_cow) %>%
  dplyr::mutate(milex_SIPRI = as.numeric(milex_SIPRI))

atop_sub <- dplyr::left_join(atop_sub, strength)

atop_sub <- atop_sub %>%
  dplyr::select(-ccode1) %>%
  dplyr::group_by(ccode2, year) %>%
  dplyr::summarise(cinc_allies = sum(cinc_MC, na.rm = TRUE),
                   milex_allies = sum(milex_SIPRI, na.rm = TRUE)) %>%
  dplyr::ungroup()

# merge again to get CINC score for ccode2 then make new column that is ratio
strength <- strength %>%
  dplyr::select(-milex_SIPRI) %>%
  dplyr::rename(ccode2 = ccode1,
                cinc_main = cinc_MC)

atop_sub <- dplyr::left_join(atop_sub, strength) %>%
  dplyr::mutate(cinc_allies_ratio = cinc_allies/(cinc_allies + cinc_main),
                milex_allies = log(milex_allies + 1)) %>%
  dplyr::select(-cinc_allies, -cinc_main) %>%
  dplyr::rename(country_code_cow = ccode2)

# Add atop duration variables coded from 04c and merge them into here
atop_dur <- read.csv(paste0(here::here(), "/inst/extdata/","alliance_duration.csv")) %>%
  dplyr::rename(country_code_cow = ccode) %>%
  dplyr::select(-X)

atop_sub <- dplyr::left_join(atop_sub, atop_dur)

# Fix column type
geog_covariates$country_code_cow <- as.numeric(geog_covariates$country_code_cow)
```

## DCAs

From codebook of Kinne JCR 2019: "Defense cooperation agreements (DCAs) are formal bilateral agreements that establish long-term institutional frameworks on various aspects of defense and military cooperation, including defense policy, military industries and weapons procurement, defense-related research and development, training and officer exchange, joint exercises, and sharing of classified information, among others. DCAs are generic agreements that, in principle, can be signed between any pair of countries. DCAs emphasize routine forms of day-to-day defense cooperation and typically do not address contingencies involving conflict or war. DCAD does not include defense pacts, nonaggression pacts, status of forces agreements, strategic partnerships, one-shot arms deals, joint research limited to specific programs (e.g., the F35 JSF), military aid agreements, nuclear cooperation or assistance deals, security agreements that primarily involve internal ministries and/or civilian security agencies, agreements surrounding border disputes or prior conflicts, arms limitation agreements, or agreements that are narrowly limited only to specific countries or contexts.

In model 2, I swap this variable for dcaGeneralV1, which includes only general DCAs of high or medium confidence. Because these are the most ambitious and extensive DCAs, they may be the only agreements that matter for militarized conflict. Indeed, the estimate is negative and significant at the 1 percent level. The estimate also appears to be substantively meaningful; the odds ratio indicates that a general DCA reduces the probability of a MID by 70 percent, all else equal.

```{r dca}
# Load data
dca <- read.csv(paste0(here::here(),"/inst/extdata/Kinne_JCR_2019/DCAD-v1.0-dyadic.csv"))

# Drop unnecessary columns
keep <- c('ccode1', 'ccode2', 'year', 'dcaGeneralV1')
dca <- dplyr::select(dca, keep)

# Create a new df for each side in the rivalry and rbind them
dca_a <- dplyr::select(dca, -c('ccode2'))
dca_a <- dca_a %>% dplyr::rename(state = ccode1)

dca_b <- dplyr::select(dca, -c('ccode1'))
dca_b <- dca_b %>% dplyr::rename(state = ccode2)

dca <- rbind(dca_a, dca_b)

# Create new columns for total number of DCAs for a country-year and dummy variable
dca <- dca %>%
  dplyr::group_by(state,
                  year) %>%
  dplyr::summarize(dca_count = sum(dcaGeneralV1),
                   .groups = "keep")

dca <- dca %>%
  dplyr::mutate(dca_binary = dplyr::if_else(dca_count > 0 , 1, 0))

# Fix incorrect values for rows outside the scope of the DCA data
dca$dca_count[dca$year < 1980 & dca$year > 2010] <- NA
dca$dca_binary[dca$year < 1980 & dca$year > 2010] <- NA

# Rename var for merging with main df
dca <- dca %>% dplyr::rename(country_code_cow = state)
dca$country_code_cow <- as.numeric(dca$country_code_cow)

geog_covariates <- left_join(geog_covariates, dca)
```

# Merge

```{r merge-all}
# join external data
a <- dplyr::left_join(geog_covariates, mc)
b <- dplyr::left_join(a, si)
c <- dplyr::left_join(b, wdi)
d <- dplyr::left_join(c, mem)
e <- dplyr::left_join(d, misc)
f <- dplyr::left_join(e, atop_sub)
g <- dplyr::distinct(f, country, year, country_code_cow, .keep_all = TRUE)

geog_covariates <- g

# Fix alliance columns
geog_covariates$NATOwhen_MEM <- NULL
geog_covariates$NATOdur_MEM[is.na(geog_covariates$NATOdur_MEM)] <- 0
```

# Great power status

Country-year measure of great power status from Correlates of War data.

```{r greatpower}
# Read in great power status data
gps <- read.csv(paste0(here::here(),"/inst/extdata/COW/majors2016.csv"))

# Drop unnecessary columns
drop <- c('stmonth', 'stday', 'endmonth', 'endday', 'version')
gps <- dplyr::select(gps, -drop)

# Transform to long
gps <- gps %>% 
    mutate(year = map2(styear, endyear, `:`)) %>% 
    select(-styear, -endyear) %>% 
    unnest(cols = year)
gps$greatpower <- 1

# Rename columns to match
gps <- gps %>% dplyr::rename(country_code_cow = ccode)
gps <- gps %>% dplyr::rename(country_abbrev_cow = stateabb)
gps$country_code_cow <- as.numeric(gps$country_code_cow)
gps$country_abbrev_cow <- as.character(gps$country_abbrev_cow)

# Merge with core dataset
geog_covariates <- dplyr::left_join(geog_covariates, gps)
geog_covariates$greatpower[is.na(geog_covariates$greatpower)] <- 0
```

# Rivalry

Variable indicating whether a country-year was a member of a rivalry. We take this from Thompson's international rivalries dataset.

```{r rivalry}
# Load data
rival <- read.csv(paste0(here::here(),"/inst/extdata/Miller_rivalries/strategic_rivalries.csv"))

# Drop unnecessary columns
keep <- c('sidea', 'sideb', 'styear', 'endyear')
rival <- dplyr::select(rival, keep)

# Transform to long
rival <- rival %>% 
    mutate(year = map2(styear, endyear, `:`)) %>% 
    select(-styear, -endyear) %>% 
    unnest(cols = year)
rival$rivalry <- 1

rival <- rival %>%
  dplyr::filter(year >= 1970)

# Create a new df for each side in the rivalry and rbind them
rival_a <- dplyr::select(rival, -c('sideb'))
rival_a <- rival_a %>% dplyr::rename(state = sidea)

rival_b <- dplyr::select(rival, -c('sidea'))
rival_b <- rival_b %>% dplyr::rename(state = sideb)

rival <- rbind(rival_a, rival_b)
rival <- unique(rival)

# Create variables for COW names for merging
rival$country_code_cow <- as.numeric(countrycode::countrycode(rival$state, "country.name", "cown"))
rival$country_abbrev_cow <- countrycode::countrycode(rival$country_code_cow, "cown", "cowc")
rival <- dplyr::select(rival, -c('state'))

geog_covariates <- left_join(geog_covariates, rival)

geog_covariates <- geog_covariates %>%
  dplyr::mutate(rivalry = dplyr::if_else(rivalry == 1, 1, 0))
```

# Conflict covariates

## COW war

```{r cow-war}
# Load COW war data
cow <- read.csv(paste0(here::here(),"/inst/extdata/COW/Inter-StateWarData_v4.0.csv"))

# Subset to columns of interest
keep <- c('ccode', 'StartYear1', 'EndYear1', 'StartYear2', 'EndYear2', 'WarName')
cow <- dplyr::select(cow, keep)

# Rbind second set of start and end years to account for discontinuity in fighting
cow1 <- dplyr::select(cow, -c('StartYear2', 'EndYear2'))
cow1 <- cow1 %>% dplyr::rename(StartYear = StartYear1, EndYear = EndYear1)

cow2 <- dplyr::select(cow, -c('StartYear1', 'EndYear1'))
cow2 <- cow2 %>% dplyr::rename(StartYear = StartYear2, EndYear = EndYear2)

cow <- rbind(cow1, cow2)
cow <- unique(cow)

# Drop rows with -8 for start or end year, meaning not applicable
cow <- subset(cow, StartYear > 0 & EndYear > 0)

# Make data long
cow <- cow %>% 
    mutate(year = map2(StartYear, EndYear, `:`)) %>% 
    select(-StartYear, -EndYear) %>% 
    unnest(cols = year)
cow$cow_interstatewar <- 1

# Create new variables for count of interstate wars by country-year and dummy
cow <- cow %>%
  dplyr::group_by(ccode,
                  year) %>%
  dplyr::summarize(interstatewar_count = sum(cow_interstatewar))

cow <- cow %>% 
  dplyr::mutate(interstatewar_binary = ifelse(interstatewar_count > 0 , 1, 0)) %>% 
  dplyr::rename(country_code_cow = ccode)

# Merge with master df
geog_covariates <- dplyr::left_join(geog_covariates, cow)

# Create new dummy variables for whether interstate war in previous 5 and 10 years

geog_covariates$interstatewar_binary[is.na(geog_covariates$interstatewar_binary)] <- 0
geog_covariates$interstatewar_count[is.na(geog_covariates$interstatewar_count)] <- 0

geog_covariates <- 
  geog_covariates %>%
  dplyr::group_by(country) %>% 
  dplyr::mutate(interstatewar_5yrlag_binary = dplyr::lag(interstatewar_binary, n = 5))


# Create new count variables for whether interstate war in previous 5 and 10 years

```

## MID history

```{r mid}
# Load participant-level data
mid <- haven::read_dta(paste0(here::here(),"/inst/extdata/COW/MIDB 4.3.dta"))
mid_fatal <- mid

# Subset to columns of interest
keep <- c('ccode', 'styear', 'endyear')
mid <- dplyr::select(mid, keep)

# Make data long
mid <- mid %>% 
    mutate(year = map2(styear, endyear, `:`)) %>% 
    select(-styear, -endyear) %>% 
    unnest(cols = year)
mid$mid <- 1

# Create new variables for count of interstate wars by country-year and dummy
mid <- mid %>%
  dplyr::group_by(ccode,
                  year) %>%
  dplyr::summarize(mid_count = sum(mid))

mid <- mid %>% dplyr::mutate(mid_binary = ifelse(mid_count > 0 , 1, 0))

# Repeat but subset to fatal mids
keep <- c('ccode', 'styear', 'endyear', 'fatality')
mid_fatal <- dplyr::select(mid_fatal, keep)

# Keep only fatal mids
mid_fatal <- subset(mid_fatal, fatality > 0)

# Make data long
mid_fatal <- mid_fatal %>% 
    mutate(year = map2(styear, endyear, `:`)) %>% 
    select(-styear, -endyear) %>% 
    unnest(cols = year)
mid_fatal$mid_fatal <- 1

# Create new variables for count of interstate wars by country-year and dummy
mid_fatal <- mid_fatal %>%
  dplyr::group_by(ccode,
                  year) %>%
  dplyr::summarize(mid_count = sum(mid_fatal))
mid_fatal <- mid_fatal %>% dplyr::rename(mid_fatal_count = mid_count)

mid_fatal <- mid_fatal %>% dplyr::mutate(mid_fatal_binary = ifelse(mid_fatal_count > 0 , 1, 0))

# Merge both mid dfs together
mid <- dplyr::left_join(mid, mid_fatal)
mid <- mid %>% dplyr::rename(country_code_cow = ccode)
mid$country_code_cow <- as.numeric(mid$country_code_cow)

# Merge with master df
geog_covariates <- dplyr::left_join(geog_covariates, mid)

geog_covariates$mid_count[is.na(geog_covariates$mid_count)] <- 0
geog_covariates$mid_binary[is.na(geog_covariates$mid_binary)] <- 0
geog_covariates$mid_fatal_count[is.na(geog_covariates$mid_fatal_count)] <- 0
geog_covariates$mid_fatal_binary[is.na(geog_covariates$mid_fatal_binary)] <- 0

# Create new dummy variables for whether MID in previous 5 and 10 years

```

## Gibler revised MID history

```{r gibler-mid}
# Read partipant level GML MID data
gibler <- read.csv(paste0(here::here(),"/inst/extdata/Gibler_ISQ_2016/gml-midb-2.1.csv"))

# We can run the exact same code as giblers since the variables all have the same name and the structure is the same. Huzzah!!
gibler_fatal <- gibler

# Subset to columns of interest
keep <- c('ccode', 'styear', 'endyear')
gibler <- dplyr::select(gibler, keep)

# Make data long
gibler <- gibler %>% 
    mutate(year = map2(styear, endyear, `:`)) %>% 
    select(-styear, -endyear) %>% 
    unnest(cols = year)
gibler$gibler <- 1

# Create new variables for count of interstate wars by country-year and dummy
gibler <- gibler %>%
  dplyr::group_by(ccode,
                  year) %>%
  dplyr::summarize(gibler_count = sum(gibler))

gibler <- gibler %>% dplyr::mutate(gibler_binary = ifelse(gibler_count > 0 , 1, 0))

# Repeat but subset to fatal giblers
keep <- c('ccode', 'styear', 'endyear', 'fatality')
gibler_fatal <- dplyr::select(gibler_fatal, keep)

# Keep only fatal giblers
gibler_fatal <- subset(gibler_fatal, fatality > 0)

# Make data long
gibler_fatal <- gibler_fatal %>% 
    mutate(year = map2(styear, endyear, `:`)) %>% 
    select(-styear, -endyear) %>% 
    unnest(cols = year)
gibler_fatal$gibler_fatal <- 1

# Create new variables for count of interstate wars by country-year and dummy
gibler_fatal <- gibler_fatal %>%
  dplyr::group_by(ccode,
                  year) %>%
  dplyr::summarize(gibler_count = sum(gibler_fatal))
gibler_fatal <- gibler_fatal %>% dplyr::rename(gibler_fatal_count = gibler_count)

gibler_fatal <- gibler_fatal %>% dplyr::mutate(gibler_fatal_binary = ifelse(gibler_fatal_count > 0 , 1, 0))

# Merge both gibler dfs together
gibler <- dplyr::left_join(gibler, gibler_fatal)
gibler <- gibler %>% dplyr::rename(country_code_cow = ccode)

# Merge with master df
geog_covariates <- dplyr::left_join(geog_covariates, gibler)

geog_covariates$gibler_binary[is.na(geog_covariates$gibler_binary)] <- 0
geog_covariates$gibler_count[is.na(geog_covariates$gibler_count)] <- 0
geog_covariates$gibler_fatal_binary[is.na(geog_covariates$gibler_fatal_binary)] <- 0
geog_covariates$gibler_fatal_count[is.na(geog_covariates$gibler_fatal_count)] <- 0

# Create new dummy variables for whether gibler in previous 5 and 10 years

```

## Threat enviro

Latent measure of threat enviro from Markowitz and Fariss 2018

```{r threatenviro}
fm <- read.csv(paste0(here::here(),"/inst/extdata/Markowitz-Fariss_JPR_2018/fm2017_masterdata.csv"))

fm <- fm %>%
  dplyr::select(ccode, year, comp_polity_logdist_logdist_all) %>%
  dplyr::rename(latentthreat = comp_polity_logdist_logdist_all,
                country_code_cow = ccode)

geog_covariates <- dplyr::left_join(geog_covariates, fm)
```

# Save data

```{r save}
saveRDS(geog_covariates, paste0(here::here(), "/data/02_EV.rds"))
```
